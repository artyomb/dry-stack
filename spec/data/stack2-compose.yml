---
version: '3.8'
services:
  svc1:
    environment:
      STACK_NAME: name1
      STACK_SERVICE_NAME: svc1
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.name1_svc1-0.service=name1_svc1-0
      - traefik.http.services.name1_svc1-0.loadbalancer.server.port=
      - traefik.http.routers.name1_svc1-0.rule=HostRegexp(`{name:backend\..*}`)
      - traefik.http.routers.name1_svc1-1.service=name1_svc1-1
      - traefik.http.services.name1_svc1-1.loadbalancer.server.port=4000
      - traefik.http.routers.name1_svc1-1.rule=HostRegexp(`{name:admin\..*}`) && PathPrefix(`/api`)
      - traefik.http.middlewares.name1_svc1_auth.basicauth.users=admin:$$apr1$$i7hdbc9g$$Rkocxo9snhmuESvUg0TTv/
      - traefik.http.routers.name1_svc1.middlewares=name1_svc1_auth
      placement:
        constraints:
        - node.role == manager
    image: service-image
    networks:
    - default
    - ingress_routing
    logging:
      driver: fluentd
      options:
        fluentd-address: fluentd2:24224
        fluentd-async: 'true'
  svc2:
    environment:
      STACK_NAME: name1
      STACK_SERVICE_NAME: svc2
    deploy:
      labels:
      - traefik.http.middlewares.name1_svc2_auth.basicauth.users=admin:$$apr1$$i7hdbc9g$$Rkocxo9snhmuESvUg0TTv/
      - traefik.http.routers.name1_svc2.middlewares=name1_svc2_auth
      placement:
        constraints:
        - node.role == manager
    image: postgres:13.5-alpine
    command: bash -c "apk add curl && docker-entrypoint.sh -c \"shared_buffers=256MB\"
      -c \"max_connections=200\" "
    entrypoint: "/usr/bin/tini -- wait-for-it opensearch:9200 --  /docker-entrypoint.sh"
    logging:
      driver: fluentd
      options:
        fluentd-address: fluentd3:24224
        fluentd-async: 'true'
networks:
  ingress_routing:
    external: true
    name: ingress-routing
