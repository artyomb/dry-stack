---
version: '3.8'
services:
  admin:
    environment:
      APP: admin
      STACK_NAME: stack
      STACK_SERVICE_NAME: admin
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.stack_admin-0.service=stack_admin-0
      - traefik.http.services.stack_admin-0.loadbalancer.server.port=5000
      - traefik.http.routers.stack_admin-0.tls=true
      - traefik.http.routers.stack_admin-0.tls.certresolver=le
      - traefik.http.routers.stack_admin-0.tls.domains[0].main=test.com
      - traefik.http.routers.stack_admin-0.rule=HostRegexp(`{name:admin\..*}`)
      replica: 2
      resources:
        limits:
          cpus: '4'
          memory: 500M
      placement:
        constraints:
        - node.role == manager
    networks:
      outside: 
      app_network:
        aliases:
        - a1
      ingress_routing: 
    image: "$REGISTRY_HOST/frontend"
  reports:
    environment:
      DB_URL: "$DB_URL"
      STACK_NAME: stack
      STACK_SERVICE_NAME: reports
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.stack_reports-0.service=stack_reports-0
      - traefik.http.services.stack_reports-0.loadbalancer.server.port=7000
      - traefik.http.routers.stack_reports-0.tls=true
      - traefik.http.routers.stack_reports-0.tls.certresolver=le
      - traefik.http.routers.stack_reports-0.tls.domains[0].main=reports.my.com
      - traefik.http.routers.stack_reports-0.rule=HostRegexp(`{name:reports\..*}`)
      placement:
        constraints:
        - node.role == manager
    networks:
      default: 
      ingress_routing: 
    image: "$REGISTRY_HOST/reports"
    ports:
    - 7000:7000
networks:
  default:
    attachable: true
  outside:
    external:
      name: host
  ingress_routing:
    external: true
    name: ingress-routing
  app_network:
    name: app.network.me
    external: true
