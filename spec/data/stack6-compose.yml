version: '3.8'
services:
  admin:
    environment:
      APP: admin
    deploy:
      labels:
        - ingress.host=admin.*
        - ingress.tls_domain=test.com
        - ingress.port=5000
        - traefik.enable=true
        - traefik.http.routers.stack_admin-0.service=stack_admin-0
        - traefik.http.services.stack_admin-0.loadbalancer.server.port=5000
        - traefik.http.routers.stack_admin-0.tls=true
        - traefik.http.routers.stack_admin-0.tls.certresolver=le
        - traefik.http.routers.stack_admin-0.tls.domains[0].main=test.com
        - traefik.http.routers.stack_admin-0.rule=HostRegexp(`{name:admin\..*}`)

      replica: 2
      resources:
        limits:
          cpus: '4'
          memory: 500M
    image: "$REGISTRY_HOST/frontend"
    networks:
    - default
    - ingress_routing
  reports:
    environment:
      DB_URL: "$DB_URL"
    deploy:
      labels:
        - ingress.host=reports.*
        - ingress.protocol=http
        - ingress.port=7000
        - traefik.enable=true
        - traefik.http.routers.stack_reports-0.service=stack_reports-0
        - traefik.http.services.stack_reports-0.loadbalancer.server.port=7000
        - traefik.http.routers.stack_reports-0.tls=true
        - traefik.http.routers.stack_reports-0.tls.certresolver=le
        - traefik.http.routers.stack_reports-0.tls.domains[0].main=reports.my.com
        - traefik.http.routers.stack_reports-0.rule=HostRegexp(`{name:reports\..*}`)

    image: "$REGISTRY_HOST/reports"
    networks:
      - default
      - ingress_routing
    ports:
      - 7000:7000
networks:
  default:
    attachable: true
  ingress_routing:
    external: true
    name: ingress-routing