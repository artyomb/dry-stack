---
version: '3.8'
services:
  admin:
    environment:
      APP: admin
    deploy:
      labels:
        - traefik.http.middlewares.simple_stack_admin_auth.basicauth.users=admin:$apr1$i7hdbc9g$Rkocxo9snhmuESvUg0TTv/
        - traefik.http.routers.simple_stack_admin.middlewares=simple_stack_admin_auth
        - stack.product=product A
    image: frontend
    ports:
      - 4000:5000
  operator:
    environment:
      APP: operator
    deploy:
      labels:
        - stack.product=product A
    image: frontend
    ports:
      - 4001:5000
      - 4002:6000
  navigator:
    environment:
      APP: navigator
    deploy:
      labels:
        - stack.product=product A
    image: frontend
    ports:
      - 4002:5000
  backend:
    environment:
      APP_PORT: 3000
      NODE_ENV: development
      SKIP_GZ: true
      DB_URL: "$DB_URL"
    deploy:
      labels:
        - ingress.host=backend.*
        - ingress.port=3000
        - traefik.enable=true
        - traefik.http.routers.simple_stack_backend.service=simple_stack_backend
        - traefik.http.services.simple_stack_backend-0.loadbalancer.server.port=3000
        - traefik.http.routers.simple_stack_backend-0.rule=HostRegexp(`{name:backend\..*}`)
        - traefik.http.services.simple_stack_backend-1.loadbalancer.server.port=4000
        - traefik.http.routers.simple_stack_backend-1.rule=HostRegexp(`{name:admin\..*}`)
            && PathPrefix(`/api`)
      replica: 2
      resources:
        limits:
          cpus: 4
          memory: 500M
    image: backend
    networks:
      - default
      - ingress_routing
  reports:
      environment:
        DB_URL: "$DB_URL"
      deploy:
        labels:
          - stack.product=product A
      image: reports:0.1
      ports:
        - 7000:7000
        - 2000:3000

networks:
  default:
    attachable: true
  ingress_routing:
    external: true
    name: ingress-routing
