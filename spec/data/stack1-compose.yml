---
version: '3.8'
services:
  admin:
    environment:
      APP: admin
      STACK_NAME: simple_stack
      STACK_SERVICE_NAME: admin
    deploy:
      labels:
      - traefik.http.middlewares.simple_stack_admin_auth.basicauth.users=admin:$apr1$i7hdbc9g$Rkocxo9snhmuESvUg0TTv/
      - traefik.http.routers.simple_stack_admin.middlewares=simple_stack_admin_auth
      - stack.product=product A
    init: true
    image: frontend
    ports:
    - 4000:5000
    logging:
      driver: syslog
      options:
        syslog-address: tcp://swarm.next:5005
        tag: image:{{.ImageName}}/service:{{.Name}}/container:{{.ID}}
  operator:
    environment:
      APP: operator
      STACK_NAME: simple_stack
      STACK_SERVICE_NAME: operator
    deploy:
      labels:
      - stack.product=product A
      - traefik.enable=true
      - traefik.http.routers.simple_stack_operator-0.service=simple_stack_operator-0
      - traefik.http.services.simple_stack_operator-0.loadbalancer.server.port=5000
      - traefik.http.routers.simple_stack_operator-0.rule=HostRegexp(`{name:operator\..*}`)
    networks:
      default:
      ingress_routing:
    init: true
    image: frontend
    ports:
    - published: 4001
      target: 5000
      protocol: tcp
      mode: ingress
    - published: 4002
      target: 6000
      protocol: tcp
      mode: ingress
    - target: 8912
      published: 8912
      protocol: tcp
      mode: host
  navigator:
    environment:
      APP: navigator
      STACK_NAME: simple_stack
      STACK_SERVICE_NAME: navigator
    deploy:
      labels:
      - stack.product=product A
      - traefik.enable=true
      - traefik.http.routers.simple_stack_navigator-0.service=simple_stack_navigator-0
      - traefik.http.services.simple_stack_navigator-0.loadbalancer.server.port=5000
      - traefik.http.routers.simple_stack_navigator-0.rule=HostRegexp(`{name:navigator\..*}`)
    networks:
      default:
      ingress_routing:
    init: true
    image: frontend
    ports:
    - 4002:5000
  backend:
    environment:
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://open.tl/v1/traces
      NODE_ENV: development
      OTEL_RESOURCE_ATTRIBUTES: deployment.environment=simple_stack,service.name=simple_stack_backend
      APP_PORT: 3000
      SKIP_GZ: 'true'
      DB_URL: "$DB_URL"
      STACK_NAME: simple_stack
      STACK_SERVICE_NAME: backend
    deploy:
      labels:
      - stack.product=product A
      - traefik.enable=true
      - traefik.http.routers.simple_stack_backend-0.service=simple_stack_backend-0
      - traefik.http.services.simple_stack_backend-0.loadbalancer.server.port=3000
      - traefik.http.routers.simple_stack_backend-0.rule=HostRegexp(`{name:backend\..*}`)
      - traefik.http.routers.simple_stack_backend-1.service=simple_stack_backend-1
      - traefik.http.services.simple_stack_backend-1.loadbalancer.server.port=4000
      - traefik.http.routers.simple_stack_backend-1.rule=HostRegexp(`{name:admin\..*}`)
        && PathPrefix(`/api`)
      replica: 2
      resources:
        limits:
          cpus: 4
          memory: 500M
    networks:
      default:
      ingress_routing:
    init: true
    image: backend
    ports:
    - published: 1080
      target: 3000
      protocol: tcp
      mode: ingress
    - target: 8912
      published: 8912
      protocol: tcp
      mode: host
    user: root
    logging:
      driver: fluentd
      options:
        fluentd-address: fluentd:24224
        fluentd-async: 'true'
  reports:
    environment:
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://open.tl/v1/traces
      NODE_ENV: production
      OTEL_RESOURCE_ATTRIBUTES: deployment.environment=simple_stack,service.name=simple_stack_reports
      DB_URL: "$DB_URL"
      STACK_NAME: simple_stack
      STACK_SERVICE_NAME: reports
    deploy:
      labels:
      - stack.product=product A
    init: true
    image: reports:0.1
    ports:
    - 7000:7000
    - 2000:3000
    volumes:
    - source: ''
      type: tmpfs
      target: "/dev/shm"
      tmpfs:
        size: 4096000000
  reports2:
    environment:
      DB_URL: "$DB_URL"
      STACK_NAME: simple_stack
      STACK_SERVICE_NAME: reports2
    deploy:
      labels:
      - stack.product=product A
    init: true
    image: reports:0.1
    volumes:
    - source:
      type: tmpfs
      target: "/dev/shm"
      tmpfs:
        size: 4096000000
  front:
    environment:
      STACK_NAME: simple_stack
      STACK_SERVICE_NAME: front
    deploy:
      labels:
      - stack.product=product A
      - traefik.enable=true
      - traefik.http.routers.simple_stack_front-0.service=simple_stack_front-0
      - traefik.http.services.simple_stack_front-0.loadbalancer.server.port=7000
      - traefik.http.routers.simple_stack_front-0.rule=HostRegexp(`{name:.*}`)
    networks:
      default:
      ingress_routing:
    init: true
    image: reports:0.1
networks:
  default:
    attachable: true
  ingress_routing:
    external: true
    name: ingress-routing
